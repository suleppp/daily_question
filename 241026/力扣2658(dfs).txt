class Solution {
    public int findMaxFish(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        int ans=0;
        boolean[][] vis=new boolean[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(check(i,j,grid,vis)){
                    ans=Math.max(ans,dfs(i,j,grid,vis));
                }
            }
        }
        return ans;
    }

    public boolean check(int i,int j,int[][] grid,boolean[][] vis){
        return i>=0&&i<grid.length&&j>=0&&j<grid[0].length&&grid[i][j]!=0&&vis[i][j]==false;
    }

    public int dfs(int x,int y,int[][] grid,boolean[][] vis){
        int ans=grid[x][y];
        vis[x][y]=true;
        int[] dx=new int[]{-1,0,1,0};
        int[] dy=new int[]{0,1,0,-1};
        for(int i=0;i<4;i++){
            int xx=dx[i]+x;
            int yy=dy[i]+y;
            if(check(xx,yy,grid,vis)){
                ans+=dfs(xx,yy,grid,vis);
            }
        }
        return ans;
    }
}