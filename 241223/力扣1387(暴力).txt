class Solution {
public:
    int getKth(int lo, int hi, int k) {
        //暴力
        vector<vector<int>> path(hi-lo+1,vector<int>(2));
        for(int i=lo;i<=hi;i++){
            path[i-lo][0]=i;
            path[i-lo][1]=weight(i);
        }
        int ans=sortByWeight(path,k);
        return ans;
    }

    int weight(int num){
        int cnt=0;
        while(num!=1){
            if(num%2==0){
                num>>=1;
            }else{
                num=3*num+1;
            }
            cnt++;
        }
        return cnt;
    }

    int sortByWeight(vector<vector<int>>& path,int k){
        sort(path.begin(),path.end(),[](const vector<int>& a,const vector<int>& b){
            if(a[1]==b[1]){
                return a[0]<b[0];
            }
            else return a[1]<b[1];
        });
        return path[k-1][0];
    }
};