class Solution {
    public int search(int[] nums, int target) {
        //旋转点两边都是单调增
        //对于旋转点来说，左边所有值一定比右边所有的值大，我们找的是样例中的值0
        //找到这个旋转点两边后，就可以大致判断target在哪一边了
        //然后在对应的一边再进行二分
        int l=0;
        int r=nums.length-1;
        while(l<r){
            int mid=(l+r)>>1;
            if(nums[mid]>nums[r]){
                l=mid+1;
            }
            else{
                r=mid;
            }
        }
        int rotation=l;
        l=0;
        r=nums.length-1;
        if(target>=nums[rotation]&&target<=nums[r]){
            l=rotation;
        }else{
            r=rotation-1;
        }
        while(l<r){
            int mid=(l+r+1)>>1;
            if(nums[mid]<=target){
                l=mid;
            }
            else{
                r=mid-1;
            }
        }
        return nums[l]==target?r:-1;
    }
}