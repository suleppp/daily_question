class Solution {
    private int odd=1;
    private int even=2;
    public int maxHeightOfTriangle(int red, int blue) {
        if(red==0) return blue==0?0:1;
        if(blue==0) return red==0?0:1;
        int redtemp=red;
        int bluetemp=blue;
        //从红色开始
        boolean flag=true;
        int ans1=0;
        while(red>0||blue>0){
            if(flag){
                if(red>=odd){
                    red-=odd;
                    ans1++;
                    odd+=2;
                    flag=false;
                }else break;
            }else{
                if(blue>=even){
                    blue-=even;
                    ans1++;
                    even+=2;
                    flag=true;
                }else break;
            }
        }
        //从蓝色开始
        flag=true;
        int ans2=0;
        odd=1;
        even=2;
        while(redtemp>0||bluetemp>0){
            if(flag){
                if(bluetemp>=odd){
                    bluetemp-=odd;
                    ans2++;
                    odd+=2;
                    flag=false;
                }else break;
            }else{
                if(redtemp>=even){
                    redtemp-=even;
                    ans2++;
                    even+=2;
                    flag=true;
                }else break;
            }
        }
        return Math.max(ans1,ans2);
    }
}