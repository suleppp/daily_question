import java.io.*;
import java.util.Arrays;

//完全背包
public class Main {
    public static int MAXM=10001;//数目
    public static int MAXT=10000001;

    public static int[] cost=new int[MAXM];
    public static int[] val=new int[MAXM];
    public static long[] dp=new long[MAXT];

    public static int t,m;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StreamTokenizer in = new StreamTokenizer(br);
        PrintWriter out = new PrintWriter(System.out);

        while(in.nextToken()!=StreamTokenizer.TT_EOF){
            t=(int)in.nval;
            in.nextToken();
            m=(int)in.nval;
            for(int i=1;i<=m;i++){
                in.nextToken();
                cost[i]=(int)in.nval;
                in.nextToken();
                val[i]=(int)in.nval;
            }
            out.print(compute());
        }

        out.flush();
        out.close();
        br.close();
    }


    public static long compute(){
        Arrays.fill(dp,1,t+1,0);
        for(int i=1;i<=m;i++){
            for(int j=cost[i];j<=t;j++){
                dp[j]=Math.max(dp[j],dp[j-cost[i]]+val[i]);
            }
        }
        return dp[t];
    }
}