class Solution {
    public boolean check(int x,int y,int[][] grid,boolean[][] vis){
        return x>=0&&x<grid.length&&y>=0&&y<grid[0].length&&vis[x][y]==false&&grid[x][y]==1;
    }

    public int dfs(int x,int y,int[][] grid,boolean[][] vis){
        int ans=1;
        vis[x][y]=true;
        int[] dx=new int[]{0,-1,0,1};
        int[] dy=new int[]{-1,0,1,0};
        for(int i=0;i<4;i++){
            int tx=dx[i]+x;
            int ty=dy[i]+y;
            if(check(tx,ty,grid,vis)){
                ans+=dfs(tx,ty,grid,vis);
            }
        }
        return ans;
    }


    public int maxAreaOfIsland(int[][] grid) {
        int ans=0;
        int n=grid.length;
        int m=grid[0].length;
        boolean[][] vis=new boolean[n][m];
        for (int i = 0; i < n; i++) {
            Arrays.fill(vis[i], false);
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(check(i,j,grid,vis)){
                    ans=Math.max(ans,dfs(i,j,grid,vis));
                }
            }
        }
        return ans;
    }
}