class Solution {
    public int maxTotalReward(int[] rewardValues) {
        //定义dp[i][j]为前i个数是否能得到总奖励值j
        //依赖于dp[i-1][j]或dp[i-1][j-rewardValues[i-1]]
        int n=rewardValues.length;
        Arrays.sort(rewardValues);
        int m=rewardValues[n-1]*2;
        boolean[][] dp=new boolean[n+1][m+1];
        dp[0][0]=true;
        for(int i=1;i<=n;i++){
            for(int j=0;j<=m;j++){
                dp[i][j]=dp[i-1][j];
                if(j-rewardValues[i-1]>=0&&j-rewardValues[i-1]<rewardValues[i-1]){
                    dp[i][j]=dp[i][j]|dp[i][j-rewardValues[i-1]];
                }
            }
        }
        for(int j=m;j>=0;j--){
            if(dp[n][j]){
                return j;
            }
        }
        return 0;
    }
}