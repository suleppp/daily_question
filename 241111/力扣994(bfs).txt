class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        
        queue<pair<int,int>> q;
        int orange=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2) q.push({i,j});
                if(grid[i][j]==1) orange++;
            }
        }
        if(orange==0) return 0;
        int ans=0;
        int dx[4]={-1,0,1,0};
        int dy[4]={0,1,0,-1};
        while(!q.empty()){
            int sz=q.size();
            for(int k=0;k<sz;k++){
                auto[x,y]=q.front();
                q.pop();
                for(int i=0;i<4;i++){
                    int nx=x+dx[i];
                    int ny=y+dy[i];
                    if(nx<0||nx>=n||ny<0||ny>=m) continue;
                    if(grid[nx][ny]==1){
                        q.push({nx,ny});
                        grid[nx][ny]=2;
                        orange--;
                        if(orange==0) return ans+1;
                    }
                }
            }
            ans++;
        }

        if(orange>0) return -1;
        return ans;

    }
};